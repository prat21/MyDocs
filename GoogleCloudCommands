Cheat Sheet
https://cloud.google.com/sdk/gcloud/reference/cheat-sheet
-------------------------------------
To enable gcloud interactive mode:
gcloud beta interactive

When using the interactive mode, press TAB to complete file path and resource arguments. If a dropdown menu appears, press TAB to move through the list, and press the spacebar to select your choice.
When using the interactive mode, press TAB to complete file path and resource arguments. If a dropdown menu appears, press TAB to move through the list, and press the spacebar to select your choice.
gcloud compute instances describe <your_vm>

---------------------------------------
Compute engine default config:

To View the list of configurations in your environment:
gcloud config list

To list all the properties:
gcloud config list --all

To list the default zone of compute in the config of your env:
gcloud config list compute/zone

To set your default compute zone to us-central1-a:
gcloud config set compute/zone us-central1-a

To see what your default region and zone settings are:
gcloud config get-value compute/zone
gcloud config get-value compute/region

To list the default configuration(for compute engine) of a GCP project:
gcloud compute project-info describe --project <your_project_ID>

To get all the gcloud commands:
gcloud -h OR gcloud --help

--------------------------------------
Compute Engine VM instance:

To create VM instance:
gcloud compute instances create privatenet-us-vm --zone=us-central1-c --machine-type=f1-micro --subnet=privatesubnet-us --image-family=debian-10 --image-project=debian-cloud --boot-disk-size=10GB --boot-disk-type=pd-standard --boot-disk-device-name=privatenet-us-vm

To list all the VM instances (sorted by zone):
gcloud compute instances list --sort-by=ZONE

SSH to a VM instance:
gcloud compute ssh vm-internal --zone us-central1-c

SSH to a private VM instance using IAP tunnel:
gcloud compute ssh vm-internal --zone us-central1-c --tunnel-through-iap

Move a VM instance from one zone to another:
gcloud compute instances move example-instance-1  --zone us-central1-b --destination-zone us-central1-f

To create target pools:
gcloud compute target-pools create www-pool --region us-central1 --http-health-check basic-check

To add instances in the target pool:
gcloud compute target-pools add-instances www-pool --instances www1,www2,www3

To create compute instance group from template:
gcloud compute instance-groups managed create lb-backend-group --template=lb-backend-template --size=2 --zone=us-central1-a

-------------------------------------------------------------------------
VPC Network:

To create a VPC network(custom mode):
gcloud compute networks create privatenet --subnet-mode=custom

To create subnet in a VPC network(say the VPC network name is "privatenet"):
gcloud compute networks subnets create privatesubnet-us --network=privatenet --region=us-central1 --range=172.16.0.0/24

To list VPC networks:
gcloud compute networks list

To list the available VPC subnets (sorted by VPC network):
gcloud compute networks subnets list --sort-by=NETWORK

To create a firewall rule:
gcloud compute firewall-rules create privatenet-allow-icmp-ssh-rdp --direction=INGRESS --priority=1000 --network=privatenet --action=ALLOW --rules=icmp,tcp:22,tcp:3389 --source-ranges=0.0.0.0/0

To list all the firewall rules (sorted by VPC network):
gcloud compute firewall-rules list --sort-by=NETWORK

To create a regional static external IP address:
gcloud compute addresses create network-lb-ip-1 --region us-central1

To create a global static external IP address:
gcloud compute addresses create lb-ipv4-1 --ip-version=IPV4 --global

To create firewall rule for health check rule for global http(s) load balancer. This is an ingress rule that allows traffic from the Google Cloud health checking systems (130.211.0.0/22 and 35.191.0.0/16).
gcloud compute firewall-rules create fw-allow-health-check \
    --network=default \
    --action=allow \
    --direction=ingress \
    --source-ranges=130.211.0.0/22,35.191.0.0/16 \
    --target-tags=allow-health-check \
    --rules=tcp:80

To create health check:
gcloud compute health-checks create http http-basic-check --port 80

-------------------------------------------------------------------------
Google Cloud Storage:

To create a bucket:
gsutil mb gs://BUCKET_NAME

To list items in a bucket:
gsutil ls gs://[YOUR_BUCKET_NAME]

To upload a file in a bucket:
gsutil cp setup.html gs://$BUCKET_NAME_1

To get the acl list for an object in a bucket:
gsutil acl get gs://$BUCKET_NAME_1/setup.html  > acl.txt

To set the access list to private:
gsutil acl set private gs://$BUCKET_NAME_1/setup.html

To update the access list to make the file publicly readable:
gsutil acl ch -u AllUsers:R gs://$BUCKET_NAME_1/setup.html

To view the current lifecycle policy of a bucket:
gsutil lifecycle get gs://$BUCKET_NAME_1

To set the lifecycle policy of a bucket(using json):
gsutil lifecycle set life.json gs://$BUCKET_NAME_1

To view the current versioning status for the bucket:
gsutil versioning get gs://$BUCKET_NAME_1

To enable versioning of a bucket:
gsutil versioning set on gs://$BUCKET_NAME_1

To copy a file to the bucket with the versioning:
gsutil cp -v setup.html gs://$BUCKET_NAME_1

To list all versions of the file:
gsutil ls -a gs://$BUCKET_NAME_1/setup.html

To download an original version of a file from bucket:
gsutil cp $VERSION_NAME recovered.txt

To sync a local folder with cloud storage bucket:
gsutil rsync -r ./firstlevel gs://$BUCKET_NAME_1/firstlevel
(Where firstlevel is the local folder, whose contents will be copied into the bucket recursively)

-------------------------------------------------------------------

Hybrid Connectivity:

Cloud VPN facilitates the connection of GCP resources present in a particular VPC network with other networks (either VPC network or external network), using a secured tunnel and internal IP addresses.

Dedicated and Partner Interconnect also facilitates the connection of on-premise resource with GCP resources using internal IP addresses.

Direct and Carrier peering facilitates the connection of on-premise resources with GCP resources using Google's edge point of presence (PoP) using public IP address.

See: https://callcenterstudio.com/google-cloud-connection-blogs/

Shared VPC and VPC peering is a way to establish direct connection between resources residing on seperate VPC networks using internal IP address. Cloud VPN is another way to achieve the same, but Shared VPC/VPC peering is more suitable for this type of scenario and comes with low network latency and low cost.

-------------------------------------------------------------------
Understanding the difference between TCP and HTTP:

https://stackoverflow.com/questions/23157817/http-vs-tcp-ip-send-data-to-a-web-server

Understanding forwarding rule in GCP:
https://cloud.google.com/load-balancing/docs/forwarding-rule-concepts

-------------------------------------------------------------------
Deployment Manager:

To create a deployment. The --preview flag gives a preview without actually starting the deployment.
gcloud deployment-manager deployments create dminfra --config=config.yaml --preview

To actually start a deployment which has been created using the command as shown above, use the below command. The update command commits the preview.
gcloud deployment-manager deployments update dminfra

To create and start the deployment at the same time, without previewing it, run the command.
gcloud deployment-manager deployments create dminfra --config=config.yaml

To delete a deployment.
gcloud deployment-manager deployments delete dminfra

-------------------------------------------------------------------
Google Kubernetes Engine:

To create a kubernetes cluster:
gcloud container clusters create [CLUSTER-NAME]

To create multi zonal cluster with autoscaling enabled:
gcloud container clusters create [CLUSTER-NAME] \
  --num-nodes 2 \
  --zone us-central1-a \
  --node-locations us-central1-a,us-central1-b,us-central1-f \
  --enable-autoscaling --min-nodes 1 --max-nodes 4

This will create six nodes across three zones initially, with a minimum of one node per zone and a maximum of four nodes per zone.
In this example, the total size of the cluster can be between three and twelve nodes, spread across the three zones.
If one of the zones fails, the total size of the cluster can be between two and eight nodes.

To authenticate the cluster:
gcloud container clusters get-credentials [CLUSTER-NAME]

To create a deployment (deploy a conatainerized application):
kubectl create deployment hello-server --image=gcr.io/google-samples/hello-app:1.0

To create a Kubernetes Service, which is a Kubernetes resource that lets you expose your application to external traffic:
kubectl expose deployment hello-server --type=LoadBalancer --port 8080

To get the list of kubernetes services:
kubectl get service

To delete a cluster:
gcloud container clusters delete [CLUSTER-NAME]

--------------------------------------------------------------------
How to create managed load-balanced instance group:

1. First, create the instance template:

gcloud compute instance-templates create lb-backend-template \
   --region=us-central1 \
   --network=default \
   --subnet=default \
   --tags=allow-health-check \
   --image-family=debian-9 \
   --image-project=debian-cloud \
   --metadata=startup-script='#! /bin/bash
     apt-get update
     apt-get install apache2 -y
     a2ensite default-ssl
     a2enmod ssl
     vm_hostname="$(curl -H "Metadata-Flavor:Google" \
     http://169.254.169.254/computeMetadata/v1/instance/name)"
     echo "Page served from: $vm_hostname" | \
     tee /var/www/html/index.html
     systemctl restart apache2'

2. Create a managed instance group based on the template:

gcloud compute instance-groups managed create lb-backend-group \
   --template=lb-backend-template --size=2 --zone=us-central1-a

3. Create the "fw-allow-health-check" firewall rule. This is an ingress rule that allows traffic from the Google Cloud health checking systems (130.211.0.0/22 and 35.191.0.0/16).
This lab uses the target tag allow-health-check to identify the VMs.

gcloud compute firewall-rules create fw-allow-health-check \
    --network=default \
    --action=allow \
    --direction=ingress \
    --source-ranges=130.211.0.0/22,35.191.0.0/16 \
    --target-tags=allow-health-check \
    --rules=tcp:80

4. Now that the instances are up and running, set up a global static external IP address that your customers use to reach your load balancer.

gcloud compute addresses create lb-ipv4-1 \
    --ip-version=IPV4 \
    --global

5. Note the IPv4 address that was reserved:

gcloud compute addresses describe lb-ipv4-1 \
    --format="get(address)" \
    --global

6. Create a healthcheck for the load balancer:

    gcloud compute health-checks create http http-basic-check \
        --port 80

7. Create a backend service (Each backend service is associated with an instance group):

    gcloud compute backend-services create web-backend-service \
        --protocol=HTTP \
        --port-name=http \
        --health-checks=http-basic-check \
        --global
8. Add your instance group as the backend to the backend service:

    gcloud compute backend-services add-backend web-backend-service \
        --instance-group=lb-backend-group \
        --instance-group-zone=us-central1-a \
        --global

9. Create a URL map to route the incoming requests to the default backend service:

    gcloud compute url-maps create web-map-http \
        --default-service web-backend-service

10. Create a target HTTP proxy to route requests to your URL map:

    gcloud compute target-http-proxies create http-lb-proxy \
        --url-map web-map-http

11. Create a global forwarding rule to route incoming requests to the proxy (Consider the forwarding rule as load balancer):

    gcloud compute forwarding-rules create http-content-rule \
        --address=lb-ipv4-1\
        --global \
        --target-http-proxy=http-lb-proxy \
        --ports=80

-------------------------------------------------------------------------------------------
Cloud SQL:

To connect to a cloud sql instance:
gcloud sql connect [INSTANCE_NAME]] --user=root